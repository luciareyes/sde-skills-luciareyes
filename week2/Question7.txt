// Problem 7
// MergeSortedLists: You are given two "sorted" linked lists, merge them into one sorted linked list.

public class Node {
	public int value;
	public Node next;
	public Node(int v) {
		value = v;
	}
}

public class LinkedList {
	public Node head;
	public Node last;
	
	public LinkedList() {
		head = null;
		last = null;
	}

	public void add(Node n) {
		if (head == null) {
			head = n;
			last = head;
			return;
		}
		last.next = n;
		last = last.next;
	}
	public void add(int value) {
		add(new Node(value);
	}
}

public LinkedList mergeLinkedList(LinkedList list1, LinkedList list2) {
	if (list1 == null && list2 == null)
		return null;

	if (list1 == null)
		return list2;
	
	if (list2 == null)
		return list1;

	LinkedList result = new LinkedList();
	Node current1 = list1.head;
	Node current2 = list2.head;
	
	while(current1 != null && current2 != null) {
		if (current1 == null) {
			result.add(current2);
			return result;
		}

                if (current2 == null) {
			result.add(current1);
			return result;
		}
	
		if (current1.value <= current2.value)) {
			result.add(current1.value);
			current1 = current1.next;
		} else {
			result.add(current2.value);
			current2 = current2.next;
		}
	}
}

